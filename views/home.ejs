<% include partials/header.ejs %>
	<div class="fluid-container">
		
		<div class="row" style="">
			<div class="col col-md-2  border" style="">
				<div style="margin: 3%;">
					<h5 style="display: inline-block; margin-right: 10%;">Product Lines</h5>
					<span><button class="btn"  data-toggle="modal" data-target="#addProdModal">+</button></span>
				</div>
				<div class="form-group" style="height: 470px; overflow-y: auto;">
					<ul class="list-group">
						<li ng-repeat="x in res" value="{{x.id}}" ng-click="getProducts(x.id, x.name);" class="line-list list-group-item {{active[x.name]}}">{{x.name}} &#160 <i class="fa fa-edit" ng-click="editLineName(x.id, x.name, x.supp_id, x.supp_name)" data-toggle="modal" data-target="#editLineModal"></i></li>	
					</ul>
				</div>
			</div>
			<div class="col col-md-10  border" style="">
				<div class="row">
					<span class="" style="margin:1%;">
						<i class="fa fa-home fa-2x" style="color: green;" aria-hidden="true"></i> &#160
						<span id="currentsize">400</span>
						/
						<span id="storagesize">1000</span> 
						<span id="currentpercent"></span>
					</span>
				</div>
				<div style="height: 470px; width: 100%; overflow-y: auto; overflow-x: hidden;">
				<table id="prodTable"class="table table-hover table-striped" style="margin-left: 2%; margin-right: 2%;">
					<thead> 
					 	<tr>
					 		<th></th>
							<th>ID</th>
							<th>Product Name</th>
							<th>Description</th>
							<th>Price</th>
							<th>Quantity</th>
							<th>Actions</th>
						</tr>
					</thead>
					<tbody>
						<tr ng-repeat="x in product_data">
							<td style="width: 5%; max-width: 5%;"><input type="checkbox" ng-model="checked[x.prod_id.toString()][0]" ng-click="toggleProd(x.prod_id, x.name, x.price, x.qty)"></td>
							<td>{{x.prod_id}}</td>
							<td style="width: 20%; max-width: 20%;"><a href="" data-toggle="modal" data-target="#prodSummaryModal" ng-click="getProdSummary(x.prod_id)">{{x.name}}</a></td>
							<td style="width: 30%; max-width: 30%;">{{x.desc}}</td>
							<td >{{x.price}}</td>
							<td>{{x.qty}}</td>
							<td><a href="" ng-click="showEditProd(x)" data-toggle="modal" data-target="#editProdModal">Edit</a> &#160
								<a href="" ng-click="delLine(x.prod_id)"> Delete</a></td>
						</tr>
					</tbody>
				</table>
				</div>
			</div>
		</div>
		<div class="row">
			<div style="margin-left: 2%; margin-top: 5px;">
				<div style="float: left;">
					<button  data-toggle="modal" data-target="#addProductModal" ng-disabled="!selected_line_name">Add New {{selected_line_name}}</button>
					<button data-toggle="modal" data-target="#orderProdModal" ng-disabled="n < 1" ng-click="addOrders();">Order selected</button>
				</div>
			</div>
		</div>
		
	</div>

	<!-- Modal for Adding Product Line-->
	<div class="modal fade addmodal" id="addProdModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	  <div class="modal-dialog" role="document">
	    <div class="modal-content">
	      <div class="modal-header">
	        <h5 class="modal-title" id="exampleModalLabel">Add Product line</h5>
	        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
	          <span aria-hidden="true">&times;</span>
	        </button>
	      </div>
	      <div class="modal-body">

	         <form name="addProdForm" ng-submit="addProdLine()">
			  <div class="form-group">
			    <label for="">Supplier:</label>
			    <select ng-model="prod.addSuppId">
			    	<option ng-repeat="q in supplier" value="{{q.id}}">{{q.name}}</option>
			    </select>
			  </div>
			  <div class="form-group">
			    <label for="prod_name">Product Line Name:</label>
			    <input type="text" class="form-control" name="prod_name" ng-minlength="3" ng-model="prod.addName" required/>
			  </div>
			  <button class="btn btn-default" ng-disabled="addProdForm.$invalid">Add</button>
			</form>
	      </div>
	      <div class="modal-footer">
	        
	      </div>
	    </div>
	  </div>
	</div>

	<!-- Modal for Editing Product Line-->
	<div class="modal fade" id="editLineModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	  <div class="modal-dialog" role="document">
	    <div class="modal-content">
	      <div class="modal-header">
	        <h5 class="modal-title" id="exampleModalLabel">Edit Product line</h5>
	        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
	          <span aria-hidden="true">&times;</span>
	        </button>
	      </div>
	      <div class="modal-body">
	      	<div class="form-group">
			    <label for="">Supplier:</label>
			    <select ng-model="eprod.editSupp" id="editSuppID"  ng-options="option.name for option in supplier track by option.id" required>
			    	 
			    </select>
			  </div>
	         <form name="editProdForm" ng-submit="submitEditLine()">
			  <div class="form-group">
			    <label for="prod_name">Product Line Name:</label>
			    <input type="text" class="form-control" name="eprod_name" ng-minlength="3" ng-model="eprod.editName" required/>
			  </div>
			  <button class="btn btn-default" ng-disabled="editProdForm.$invalid">Update</button>
			</form>
	      </div>
	      <div class="modal-footer">
	        
	      </div>
	    </div>
	  </div>
	</div>

	<!-- Modal for Adding Product-->
	<div class="modal fade addmodal" id="addProductModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" >
	  <div class="modal-dialog" role="document">
	    <div class="modal-content">
	      <div class="modal-header">
	        <h5 class="modal-title" id="exampleModalLabel">Add New {{selected_line_name}}</h5>
	        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
	          <span aria-hidden="true">&times;</span>
	        </button>
	      </div>
	      <div class="modal-body">

	         <form name="newProduct" ng-submit="addProd()">
	         	<div class="form-group">
	         		<div class="sp-prof-img-container">
		         		<input accept="image/x-png,image/jpeg,image/jpg"  name="file" id="prod_logo_input" class="sp-prof-img-file" type="file" onchange="loadFile(event)" id="prodLogo">
						<img style="border-radius: 0px;" id="prod_logo" class="sp-prof-img" src="/lib/img/products/no_content.png"/>
					</div>
	         	</div>
			  <div class="form-group">
			    <label for="product_name">Product Name:</label>
			    <input type="text" class="form-control" name="prod_name" ng-maxlength="80" ng-model="nprod.name" required/>
			  </div>
			  <div class="form-group">
			    <label for="product_desc">Product Description:</label>
			    <textarea class="form-control" rows="3"  name="product_desc" ng-model="nprod.desc" ng-minlength="4"  ng-maxlength="300" required></textarea>
			  </div>
			  
			  <div class="form-group">
			    <label for="product_qty">Product Quantity:</label>
			    <input type="number" class="form-control" name="product_qty" ng-model="nprod.qty" min="1" required/>
			  </div>
			  <div class="form-group">
			    <label for="product_price">Product Price:</label>
			    <input type="number" class="form-control" name="product_price" ng-model="nprod.price" required/>
			  </div>
			  <button class="btn btn-default" ng-disabled="newProduct.$invalid">Add Product</button>
			</form>
	      </div>
	      <div class="modal-footer">
	        
	      </div>
	    </div>
	  </div>
	</div>

	<!-- Modal for Editing Product-->
	<div class="modal fade editmodal" id="editProdModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" >
	  <div class="modal-dialog" role="document">
	    <div class="modal-content">
	      <div class="modal-header">
	        <h5 class="modal-title" id="exampleModalLabel">Edit Product Details</h5>
	        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
	          <span aria-hidden="true">&times;</span>
	        </button>
	      </div>
	      <div class="modal-body">

	         <form name="editProduct" ng-submit="editProd()">
	         	<div class="form-group">
	         		<div class="sp-prof-img-container">
		         		<input accept="image/x-png,image/jpeg,image/jpg"  name="file" id="eprod_logo_input" class="sp-prof-img-file" type="file" onchange="loadFile(event, 'prod_logo_edit')" id="prodLogoEdit">
						<img style="border-radius: 0px;" id="prod_logo_edit" class="sp-prof-img" src="/lib/img/products/{{editprod.logo}}"/>
					</div>
	         	</div>
			  <div class="form-group">
			    <label for="product_name">Product Name:</label>
			    <input type="text" class="form-control" name="prod_name" ng-maxlength="80" ng-model="editprod.name" required/>
			  </div>
			  <div class="form-group">
			    <label for="product_desc">Product Description:</label>
			    <textarea class="form-control" rows="3"  name="product_desc" ng-model="editprod.desc" ng-minlength="4" ng-maxlength="300" required></textarea>
			  </div>
			  
			  <div class="form-group">
			    <label for="product_qty">Product Quantity:</label>
			    <input type="number" class="form-control" name="product_qty" ng-model="editprod.qty" min="1" required/>
			  </div>
			  <div class="form-group">
			    <label for="product_price">Product Price:</label>
			    <input type="number" class="form-control" name="product_price" ng-model="editprod.price" required/>
			  </div>
			  <button class="btn btn-default" ng-disabled="editProduct.$invalid">Edit Product</button>
			</form>
	      </div>
	      <div class="modal-footer">
	        
	      </div>
	    </div>
	  </div>
	</div>

	<!-- Modal for Ordering-->
	<div class="modal fade" id="orderProdModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	  <div class="modal-dialog modal-lg" role="document" style="max-width: 600px;">
	    <div class="modal-content">
	      <div class="modal-header">
	        <h5 class="modal-title" id="exampleModalLabel">Add Order</h5>
	        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
	          <span aria-hidden="true">&times;</span>
	        </button>
	      </div>
	      <form name="placeOrders" ng-submit="addOrder()">
	      <div class="modal-body">
	      	<div style="height: 350px; overflow-y: auto; overflow-x: hidden;">
		        <table class="table">
			    <thead class="thead-dark">
			      <tr>
			        <th>Name</th>
			        <th>Qty</th>
			        <th>Price</th>
			        <th>Action</th>
			      </tr>
			    </thead>
			    <tbody>
			    	<div class="form-group">
				    	<label>Client:</label>
				    	<select name="client_list" ng-model="cl_id" >
				    		<option ng-repeat="y in clients" value="{{y.id}}">{{y.name}}</option>
				    	</select>
				    </div>
			      <tr ng-repeat="d in checked">
			      	<td style="width: 50%; max-width: 50%;">{{d[2]}}</td>
			      	<td><input type="number" min="1" max={{d[4]}} ng-min="1" ng-max="d[4]" ng-model="d[5]" style="width: 50%;"></td>
			      	<td>&#8369;{{d[5] * d[3]}}</td>
			      	<td><button type="button" ng-click="toggleProd(d[1])" style="color: red">X</button></td>
			      </tr>
			    </tbody>
			  </table>
			</div>
			<div><span>Total: </span><span style="margin-left; color: green;">&#8369;{{checked | sumOrders}}</span></div>
	      </div>
	      <div class="modal-footer">
	      	<div><label>Delivery Charge: </label><input type="number" ng-model="del_charge" ng-min="0" value="0"></div>
	        <button type="submit" class="btn btn-default" ng-disabled="placeOrders.$invalid || !cl_id">Place Order</button>
	      </div>
	  </form>
	    </div>
	  </div>
	</div>

	<!-- Modal for Product Summary -->
	<div class="modal fade" id="prodSummaryModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" >
	  <div class="modal-dialog" role="document">
	    <div class="modal-content">
	      <div class="modal-header">
	        <h5 class="modal-title" id="exampleModalLabel">Product Summary</h5>
	        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
	          <span aria-hidden="true">&times;</span>
	        </button>
	      </div>
	      <div class="modal-body">
	         	<div class="form-group">
	         		<div class="sp-prof-img-container">
						<img style="border-radius: 0px;" id="prod_logo_display" class="sp-prof-img" src="{{dprod.prod_logo}}"/>
					</div>
	         	</div>
			  <div class="form-group">
			    <label for="product_name">Product Name:</label>
			    <input type="text" class="form-control"  ng-maxlength="80" ng-model="dprod.name" disabled/>
			  </div>
			  <div class="form-group">
			    <label >In Stock Quantity:</label>
			    <input type="text" class="form-control"  ng-maxlength="80" ng-model="dprod.qty" disabled/>
			  </div>
			   <div class="form-group">
			    <label>Product Price</label>
			    <input type="text" class="form-control"  ng-maxlength="80" ng-model="dprod.price" disabled/>
			  </div>
			  <div class="form-group">
			    <label>Total Item Sold</label>
			    <input type="text" class="form-control" ng-maxlength="80" ng-model="dprod.itemsold" disabled/>
			  </div>
			  <div class="form-group">
			    <label>Total Amount Sold</label>
			    <input type="text" class="form-control" ng-maxlength="80" ng-model="dprod.amtsold" disabled/>
			  </div>
			  
	      </div>
	      <div class="modal-footer">
	        
	      </div>
	    </div>
	  </div>
	</div>
	


<script type="text/javascript">
	var table;
	$(document).ready(function() {
		document.getElementById("eprod_logo_input").value = "";
		document.getElementById("prod_logo_input").value = "";

		$('.addmodal').on('hidden.bs.modal', function(){
	        $(this).find('form')[0].reset();
	        document.getElementById('prod_logo').src = "/lib/img/products/no_content.png";
	     });
		$('.editmodal').on('hidden.bs.modal', function(){
	        document.getElementById("eprod_logo_input").value = "";
	     });


		
	});
	var app = angular.module("myApp", []);

	app.controller("myCtrl", function($scope, $http){
		
		// init variables
		$scope.selected_line;
		$scope.selected_line_name;
		$scope.checked = {};
		$scope.n  = 0;	// number of items checked
		$scope.orderTotal = 0;
		$scope.del_charge = 0;
		$scope.cl_id = null;
		$scope.clients = [];
		$scope.eprod = {};
		$scope.editprod = {};
		$scope.supplier = [];

		var dTable;
		// get product lines
		$scope.getProductLines = function(){
			$http.get("/api/product-lines").then(function(response){
				if (response.data.length == 0)
					return;
				$scope.res = response.data;
				$scope.selected_line = $scope.res[0]['id'];

				$scope.getProducts($scope.selected_line, $scope.res[0]['name']);
				
			});
		};
		$scope.getClients = function(){

			$http.get("/api/client-select").then(function(response){
				
				$scope.clients = response.data;
				

			});
		}
		
		$scope.getProductLines();
		$scope.getClients();
		$scope.getProducts = function(chosen, line_name){
			
			if (dTable){
				dTable.destroy();
			}			
			$scope.selected_line = chosen;
			$scope.selected_line_name = line_name;
			$scope.product_data = {};
			$http({
				url: "/api/products",
				method: "GET",
				params: {prod_id: chosen}
			}).then(function(response){
				$scope.product_data = response.data;
				angular.element(document).ready(function() {  
				    dTable = $('#prodTable').DataTable({
				    	paging: false,
				    	columnDefs: [
					    	{ "orderable": false, "targets": 0 }
					  	],
					  	bInfo: false
				    });  
				});  
				
				
			});
			$scope.active = {};
			$scope.active[line_name] = 'active';
			$scope.getStorageStat();
			

		}

		$scope.addProdLine = function(){
			
			$http({
				method: "POST",
				url: "/api/post/add-prod-line",
				data: JSON.stringify({name: $scope.prod.addName,
					supplier_id: $scope.prod.addSuppId}),
				dataType: 'json',
				contentType: 'application/json'
			})
			.then(function(response){
				alert(response.data);
				if (response.data == "Success")
					$scope.getProductLines();
			});
		};

		$scope.addProd = function(){
			$scope.nprod.line_id = $scope.selected_line;

			var logo = document.getElementById("prod_logo_input").files[0];
			if (!valid_logo(logo))
				return;
			
			var formData = new FormData();
			formData.append("prod_logo", logo);
			formData.append("new_prod", JSON.stringify($scope.nprod));
			
			$http({
				method: 'POST',
                    url: '/api/post/add-prod',
                    data: formData,
                    headers: {
                        'Content-Type': undefined
                    }
			}).then(function(response){
				alert(response.data);
				$scope.nprod = {};
				$('#addProductModal').modal('hide');
				$scope.getProducts($scope.selected_line, $scope.selected_line_name);	
			});
		};

		// get storage status
		$scope.getStorageStat = function(){
			$http.get('/api/storage-status').then(function(res){
				var storage = res.data;
				storage.percent = Number((storage.qty / storage.size) * 100).toFixed(2);
				

				$('#currentsize').html(storage.qty);
				$('#storagesize').html(storage.size);
				$('#currentpercent').html(`(${storage.percent}%)`);

			})
		}
		$scope.getStorageStat();
		// submit edit
		$scope.editProd = function(){
			if (!confirm("Save Changes?"))
				return;

			var logo = document.getElementById("eprod_logo_input").files[0];
			if (!valid_logo(logo))
				return;
			var formData = new FormData();
			formData.append("prod_logo", logo);
			formData.append("edit_prod", JSON.stringify($scope.editprod));
			$http({
				method: 'POST',
                    url: '/api/post/edit-prod',
                    data: formData,
                    headers: {
                        'Content-Type': undefined
                    }
			}).then(function(response){
				alert(response.data);
				$scope.getProducts($scope.selected_line, $scope.selected_line_name);	
			});
		}

		$scope.toggleProd = function(id, name, unit_price, qty){
			
			var index = id.toString();
			if ($scope.checked.hasOwnProperty(index) == true)
			{
				delete $scope.checked[index];
				$scope.n -= 1;
			}
			else
			{

				// [checker, product_id, name, unit price of product, qty available, quantity to order], client_id
				$scope.checked[index] = [true, id, name, unit_price, qty, 1, null];
				$scope.n += 1;
			}
		}

		// place order
		$scope.addOrder = function(){
			
			if (!confirm("Add Order Now ?"))
				return;
			// build Order JSON object
			var toOrder = {};
			toOrder.del_charge = $scope.del_charge;
			toOrder.client_id = $scope.cl_id;
			toOrder.orders = [];
			for (var k in $scope.checked){
				var d = $scope.checked;
				var tmp = {};
				tmp.id = d[k][1];
				tmp.qty = d[k][5];
				tmp.u_price = d[k][3];
				toOrder.orders.push(tmp);
				
			}
			
			// send data to server
			$http({
				method:  "POST",
				url: "/api/post/add-order",
				data: JSON.stringify(toOrder),
				dataType: 'json',
				contentType: 'application/json'

			}).then(function(response){
				alert(response.data);
				$scope.checked = {};
				$scope.del_charge = 0;
				$('#orderProdModal').modal('hide');
				$scope.n = 0;
				$scope.cl_id = null;
				$scope.getProducts($scope.selected_line, $scope.selected_line_name);
			});
		}



		// get the product summary from server
		$scope.getProdSummary = function(id){
			document.getElementById('prod_logo_display').src = '';
			$scope.dprod = {};
			$http.get("/api/product-summary/"+id).then(function(response){
				$scope.dprod = response.data;
				if(!$scope.dprod.amtsold)
					$scope.dprod.amtsold = "0.00";
				
				
				if (!$scope.dprod.itemsold)
					$scope.dprod.itemsold = "0";
			});
		}

		$scope.editLineName = function(id, lname, supp_id, supp_name){
			
			$scope.eprod.editName = lname;
			$scope.eprod.editId = id;
			$scope.eprod.editSupp = {id: supp_id, name: supp_name};
		}
		$scope.submitEditLine = function(){
			console.log($scope.eprod.editSupp);
			$http({
				method: "POST",
				url: "/api/post/edit-prod-line",
				data: JSON.stringify({
					id: $scope.eprod.editId, 
					name: $scope.eprod.editName,
					sid: $scope.eprod.editSupp.id}),
				dataType: 'json',
				contentType: 'application/json'
			})
			.then(function(response){
				alert(response.data);
				if (response.data == "Success")
					$scope.getProductLines();
			});
		}

		$scope.delLine = function(pid){
			if (!confirm("Delete Product?"))
				return;

			$http({
				method: "POST",
				url: "/api/post/del-product",
				data: JSON.stringify({
					id: pid}),
				dataType: 'json',
				contentType: 'application/json'
			})
			.then(function(response){
				alert(response.data);
				$scope.getProducts($scope.selected_line, $scope.selected_line_name);
				
			});
		}

		$scope.showEditProd = function(data){
			document.getElementById('prod_logo_edit').src = "";
			$scope.editprod = data;
			document.getElementById('prod_logo_edit').src = "/lib/img/products/"+$scope.editprod.logo;

		}

		$scope.getSuppliers = function(){
			$http.get('api/suppliers').then(function(res){
				data = res.data;
				data.forEach(item=>{
					$scope.supplier.push({
						id: item.supplier_id,
						name: item.supplier_name
					})
				});
			});
			console.log($scope.supplier);
		}
		$scope.getSuppliers();
	}).filter('sumOrders', function(){
		return function(order_data){
			if(angular.equals(order_data, {})){
				return 0;
			}
			var total = 0;
			for (key in order_data){
				total += order_data[key][3] * order_data[key][5];
			}
			return total;
		}
	});
	var loadFile = function(event, src){
		//console.log(event.target);
		var output;
		if (src == 'prod_logo_edit')
			output = document.getElementById(src);
		else
			output = document.getElementById('prod_logo');
		//console.log(output);
    	output.src = URL.createObjectURL(event.target.files[0])
	}

	function valid_logo(logo){
		
		var out = true;
		if (logo){
			// validate image
			if (logo.size > (1024 * 1024 * 5)){
				alert("image too big");
				out = false;
			}
			if (logo.type != "image/jpeg" && logo.type != "image/jpg" && logo.type != "image/png" ){
				alert("unsuported filetype");
				out = false;
			}
		}
		return out;
	}
</script>
<% include partials/footer.ejs %>